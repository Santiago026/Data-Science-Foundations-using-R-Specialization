
R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##tapply is used to apply a function over subsets of a vector
> str(tapply)
function (X, INDEX, FUN = NULL, ..., default = NA, simplify = TRUE)  
> ##x is a vector
> ##INDEX is a factor or a list of factors (or else they coerced to factors)
> ##FUN is a function to be applied
> ##...contains other arguments to be passed FUN
> ##simplify, should we simplify the result?
> 
> ##Take group means
> x <- c(rnorm(10), runif(10), rnorm(10, 1))
> f <- gl(3, 10)
> f
 [1] 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3
Levels: 1 2 3
> tapply(x, f, mean)
         1          2          3 
-0.2680266  0.3786374  1.8608340 
> ##Take group means without simplification
> tapply(x, f, mean, simplify = FALSE)
$`1`
[1] -0.2680266

$`2`
[1] 0.3786374

$`3`
[1] 1.860834

> ##Find group ranges
> tapply(x, f, range)
$`1`
[1] -1.4043683  0.7667777

$`2`
[1] 0.01754067 0.75357793

$`3`
[1] 0.7758883 3.3566897

> 
